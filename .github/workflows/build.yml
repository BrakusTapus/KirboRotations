name: Build
# Put your personal access token in a repository secret named PAT for cross-repository access
on:
  workflow_dispatch:
  push:
    branches: [main]

  pull_request:
    branches: [main]

env:
  PROJECT_NAME: KirboRotations

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1 # Updated to v4.1.1
        with:
          submodules: recursive

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.3.1 # Updated to v1.3.1

      - name: Download Dalamud
        run: |
          Invoke-WebRequest -Uri https://goatcorp.github.io/dalamud-distrib/stg/latest.zip -OutFile latest.zip
          Expand-Archive -Force latest.zip "$env:AppData\XIVLauncher\addon\Hooks\dev\"
      - name: Build
        run: |
          dotnet restore -r win ${{ env.PROJECT_NAME }}.sln
          dotnet build --configuration Release
        env:
          DOTNET_CLI_TELEMETRY_OUTPUT: true
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4.0.0 # Updated to v4.0.0
        with:
          name: ${{env.PROJECT_NAME}}
          path: ${{env.PROJECT_NAME}}/bin/Release/net7.0-windows/
          if-no-files-found: error

  release:
    needs: build
    runs-on: windows-latest
    if: contains(toJSON(github.event.commits.*.message), '[PUSH]') && github.event_name == 'push'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4.1.1 # Updated to v4.1.1
        with:
          fetch-depth: 0

      - name: Download artifact
        uses: actions/download-artifact@v4.1.0 # Updated to v4.1.0
        id: download
        with:
          name: ${{env.PROJECT_NAME}}

      - name: Get version
        id: version
        uses: notiz-dev/github-action-json-property@release
        with: 
            path: '${{env.PROJECT_NAME}}.json'
            prop_path: 'AssemblyVersion'   
      - run: echo ${{steps.version.outputs.prop}} 

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.PROJECT_NAME }} ${{steps.version.outputs.prop}}
          tag_name: ${{steps.version.outputs.prop}} 
          body: ${{ github.events.commits[0].message }}
          files: |
              ./KirboRotations.dll
              ./KirboRotations.pdb

          
